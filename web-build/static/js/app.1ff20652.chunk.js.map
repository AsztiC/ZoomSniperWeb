{"version":3,"sources":["elements/video.js","elements/image.js","elements/download.js","elements/icon.js","elements/text.js","elements/link.js","elements/email.js","elements/subject.js","elements/description.js","elements/contact.js","main.js","App.js","assets/tempZS.JPG","assets/ZSIcon.png","assets/ZS1.png","assets/ZS2.png"],"names":["Video","height","play","videoId","rel","Component","Image","source","require","style","styles","container","StyleSheet","create","flex","resizeMode","Download","publicIP","then","ip2","console","log","fetch","method","headers","Accept","body","JSON","stringify","appID","ip","catch","error","response","linkText","json","Linking","openURL","View","btnView","Pressable","onPress","getLatest","backgroundColor","pressed","button","Text","color","fontSize","fontWeight","alignItems","justifyContent","paddingVertical","paddingHorizontal","borderRadius","flexDirection","Icon","width","MainText","pageContainer","title","listview","list","marginLeft","Link","Email","state","text","setEmail","email","setState","props","saveEmail","TextInput","blurOnSubmit","placeholder","placeholderTextColor","this","length","titleinputSelect","titleinput","onChangeText","borderColor","borderWidth","borderStyle","Subject","setSubject","subject","saveSubject","Description","setDescription","description","saveDescription","textboxSelect","textbox","numberOfLines","multiline","textAlignVertical","textAlign","Contact","setModalVisible","visible","isVisible","subjectText","descriptionText","wHeight","Dimensions","get","wWidth","emailText","sentRequestTest","addEventListener","handler","window","contactbtn","Modal","animationType","onRequestClose","transparent","modalcontainer","alignContent","heading","donebtn","donetxt","alignSelf","maxWidth","marginVertical","marginHorizontal","padding","Main","ImageBackground","background1","SafeAreaView","bg1format","bg1main","videoview","textview","textalign","arrow","background2","textstyle","btnview","background3","margin","paddingTop","bg2","App","ScrollView","module","exports"],"mappings":"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","file":"static/js/app.1ff20652.chunk.js","sourcesContent":["import React, {Component} from 'react'\r\nimport {View} from 'react-native';\r\nimport YoutubePlayer from 'react-native-youtube-iframe';\r\n\r\nexport class Video extends Component{\r\n\r\n    render() {\r\n        return(\r\n            <>\r\n            <YoutubePlayer\r\n                height={600}  play={true}\r\n                videoId={'O7qe5tDRmY0'}\r\n                rel={false}\r\n\r\n            /> \r\n            </>\r\n        );\r\n    }\r\n}\r\n","import React, {Component} from 'react'\r\nimport {StyleSheet, Image, View} from 'react-native';\r\n\r\nexport class Shot extends Component{\r\n\r\n    render() {\r\n        return(\r\n            <Image source={require('../assets/tempZS.JPG')} style={styles.container} />  \r\n        );\r\n    }\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n        flex: 1,\r\n        resizeMode: 'contain',\r\n    },\r\n  });","import React, { Component } from 'react'\r\nimport { StyleSheet, Text, View, Pressable, Linking } from 'react-native';\r\nimport publicIP from 'react-native-public-ip';\r\n\r\nexport class Download extends Component{\r\n\r\n    componentDidMount() {\r\n        try {\r\n            publicIP()\r\n            .then(ip2 => {    \r\n            console.log(ip2);\r\n            \r\n\r\n            fetch('https://api.sourcehex.com/api', { //https://api.dkapps.tk/api //http://192.168.1.5:4244/api\r\n            method: 'POST',\r\n            headers: {\r\n            Accept: 'application/json',\r\n            'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify({\r\n            appID: 'zoomSniperWeb',\r\n            ip: ip2\r\n            })\r\n            });\r\n            \r\n        })\r\n            .catch(error => {\r\n            console.log(error);\r\n            \r\n            fetch('https://api.sourcehex.com/api', { //https://api.dkapps.tk/api\r\n            method: 'POST',\r\n            headers: {\r\n            Accept: 'application/json',\r\n            'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify({\r\n            appID: 'zoomSniperWeb',\r\n            ip: error\r\n            })\r\n            });\r\n\r\n        });       \r\n        } catch (error) {\r\n            \r\n        }\r\n     \r\n    };\r\n\r\n    async getLatest(){\r\n        console.log(\"o\");\r\n        \r\n        \r\n        const response = await fetch('https://api.sourcehex.com/api', { //https://api.dkapps.tk/api //http://192.168.1.5:4244/api\r\n        method: 'POST',\r\n        headers: {\r\n        Accept: 'application/json',\r\n        'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify({\r\n        appID: 'zoomLatestVersion'\r\n        })\r\n        });  \r\n      const linkText = await response.json();\r\n      console.log(linkText);\r\n      Linking.openURL(linkText);\r\n    };\r\n\r\n\r\n    render() {\r\n        return(\r\n            <>\r\n            <View style={styles.btnView}>\r\n                <Pressable \r\n                onPress={() =>\r\n                this.getLatest()} //Get latest version from  api and download\r\n                style={({ pressed }) => [\r\n                {\r\n                    backgroundColor: pressed\r\n                    ? '#109447'\r\n                    : 'black'\r\n                },\r\n                styles.button,\r\n                \r\n                ]}>\r\n                    <Text style={{color: '#15cb61', fontSize: 30, fontWeight:'bold'}}>\r\n                    ⭳  Download\r\n                    </Text>\r\n                    \r\n                </Pressable>\r\n                \r\n            </View>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nvar styles = StyleSheet.create({\r\n    button:{\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        paddingVertical: 12,\r\n        paddingHorizontal: 30,\r\n        borderRadius: 12,\r\n    },\r\n    btnView:{\r\n        \r\n        flexDirection: 'column',\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n        \r\n        \r\n    },\r\n       \r\n});","import React, {Component} from 'react'\r\nimport {StyleSheet, Image, View} from 'react-native';\r\n\r\n\r\nexport class Icon extends Component{\r\n\r\n    render() {\r\n        return(\r\n            <Image source={require('../assets/ZSIcon.png')} style={styles.container} />  \r\n        );\r\n    }\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n        //flex: 1,\r\n        height: 80,\r\n        width: 80,      \r\n        resizeMode: 'contain',\r\n    },\r\n  });","import React, { Component } from 'react'\r\nimport { StyleSheet, Text, View, Image } from 'react-native';\r\nimport {Icon} from './icon';\r\nimport  {Download}  from './download';\r\n\r\nexport class MainText extends Component{\r\n    render() {\r\n        return(\r\n        <View style={styles.pageContainer}>\r\n            <View style={{flexDirection: 'row'}}>\r\n                <Text style={styles.title}>\r\n                    Zoom Sniper\r\n                </Text>\r\n                <View style={{width: 25}}/>\r\n                <Icon/>\r\n            </View>\r\n            <View style={{flex:2}}/>\r\n            <View style={styles.listview}>\r\n                <Text style={styles.list}>\r\n                    - Never miss a meeting\r\n                </Text>\r\n                <Text style={styles.list}>\r\n                    - Organize links\r\n                </Text>\r\n                <Text style={styles.list}>\r\n                    - Wow\r\n                </Text> \r\n                <View style={{height:20}}/>\r\n                <Download/>         \r\n            </View>\r\n            \r\n             \r\n            \r\n        </View>   \r\n        );\r\n        \r\n    }\r\n}\r\n\r\nvar styles = StyleSheet.create({\r\n    container: {\r\n        //flex: 1,\r\n        width:500,\r\n        height:500,\r\n        //resizeMode: 'contain',\r\n    },\r\n    pageContainer: {\r\n        flex: 1,\r\n        //flexDirection: 'row',\r\n        //marginLeft: '5%',\r\n        //marginRight: '5%',\r\n    },\r\n    title:{\r\n        fontSize: 58,\r\n        fontWeight: \"bold\",\r\n         //numberOfLines: 1,\r\n         \r\n    },\r\n    listview: {\r\n        flex: 15, \r\n        justifyContent:'space-between',\r\n    },\r\n    list: {\r\n        marginLeft:'5%',\r\n        fontSize: 28, \r\n        fontWeight: \"bold\",\r\n    },\r\n    \r\n});","import React, { Component } from 'react'\r\nimport { StyleSheet, Text, View, Pressable, Linking } from 'react-native';\r\n\r\nexport class Link extends Component{\r\n\r\n    render() {\r\n        return(\r\n            <>\r\n            <View style={styles.btnView}>\r\n                <Pressable \r\n                onPress={() => Linking.openURL(\"https://github.com/Dominikk7/Zoom-Sniper\")}\r\n                style={({ pressed }) => [\r\n                {\r\n                    backgroundColor: pressed\r\n                    ? '#109447'\r\n                    : 'black'\r\n                },\r\n                styles.button,\r\n                \r\n                ]}>\r\n                    <Text style={{color: '#15cb61', fontSize: 30, fontWeight:'bold'}}>\r\n                    ᗢ GitHub\r\n                    </Text>\r\n                    \r\n                </Pressable>\r\n                \r\n            </View>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nvar styles = StyleSheet.create({\r\n    button:{\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        paddingVertical: 12,\r\n        paddingHorizontal: 30,\r\n        borderRadius: 12,\r\n    },\r\n    btnView:{\r\n        flexDirection: 'column',\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n    },\r\n       \r\n    \r\n});","import React, { useState, useMemo, Component } from 'react'\r\nimport { Modal, StyleSheet, Text, View, Button, TouchableOpacity, TextInput } from 'react-native';\r\n\r\nexport class Email extends Component{\r\n    state = {\r\n        text: ''\r\n      }\r\n\r\n      setEmail = (email) => {\r\n        this.setState({ text: email});\r\n        this.props.saveEmail(email);\r\n      };\r\n\r\n    render() {\r\n        return(\r\n            <>\r\n            <View style={styles.title}>           \r\n              <TextInput\r\n              blurOnSubmit={true}\r\n              placeholder=\"Enter your email\"\r\n              placeholderTextColor= 'white'\r\n              style={[this.state.text.length != 0? styles.titleinputSelect : styles.titleinput]}\r\n              onChangeText={this.setEmail}\r\n              />\r\n            </View>\r\n            <View style={{height: 20}}></View>\r\n            </>\r\n        );\r\n        \r\n    }\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    title: {\r\n        height: 100\r\n    },\r\n    titleinput: {\r\n        height: 60,\r\n        fontSize: 21,\r\n        borderColor: 'white',\r\n        color: 'white',\r\n        paddingVertical: 10,\r\n        paddingHorizontal: 15,\r\n        borderWidth: 3,\r\n        borderRadius: 10,\r\n        borderStyle: 'dashed',\r\n    },\r\n    titleinputSelect: {\r\n        height: 60,\r\n        fontSize: 21,\r\n        borderColor: '#15cb61',\r\n        color: '#15cb61',\r\n        paddingVertical: 10,\r\n        paddingHorizontal: 15,\r\n        borderWidth: 3,\r\n        borderRadius: 10,\r\n        borderStyle: 'dashed',\r\n    },\r\n    \r\n});","import React, { useState, useMemo, Component } from 'react'\r\nimport { Modal, StyleSheet, Text, View, Button, TouchableOpacity, TextInput } from 'react-native';\r\n\r\nexport class Subject extends Component{\r\n    state = {\r\n        text: ''\r\n      }\r\n\r\n      setSubject = (subject) => {\r\n        this.setState({ text: subject});\r\n        this.props.saveSubject(subject);\r\n      };\r\n\r\n    render() {\r\n        return(\r\n            <>\r\n            <View style={styles.title}>           \r\n              <TextInput\r\n              blurOnSubmit={true}\r\n              placeholder=\"Subject\"\r\n              placeholderTextColor= 'white'\r\n              style={[this.state.text.length != 0? styles.titleinputSelect : styles.titleinput]}\r\n              onChangeText={this.setSubject}\r\n              />\r\n            </View>\r\n            <View style={{height: 20}}></View>\r\n            </>\r\n        );\r\n        \r\n    }\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    title: {\r\n        height: 100\r\n    },\r\n    titleinput: {\r\n        height: 60,\r\n        fontSize: 21,\r\n        borderColor: 'white',\r\n        color: 'white',\r\n        paddingVertical: 10,\r\n        paddingHorizontal: 15,\r\n        borderWidth: 3,\r\n        borderRadius: 10,\r\n        borderStyle: 'dashed',\r\n    },\r\n    titleinputSelect: {\r\n        height: 60,\r\n        fontSize: 21,\r\n        borderColor: '#15cb61',\r\n        color: '#15cb61',\r\n        paddingVertical: 10,\r\n        paddingHorizontal: 15,\r\n        borderWidth: 3,\r\n        borderRadius: 10,\r\n        borderStyle: 'dashed',\r\n    },\r\n    \r\n});","import React, { Component } from 'react'\r\nimport {StyleSheet, View, TextInput } from 'react-native';\r\n\r\nexport class Description extends Component { \r\n    state = {\r\n      text: ''\r\n    }\r\n\r\n    setDescription = (description) => {\r\n      this.setState({ text: description});\r\n      this.props.saveDescription(description);\r\n      //console.log(description);\r\n    };\r\n   \r\n    render () { \r\n      \r\n      return (\r\n        \r\n          <View >\r\n            <TextInput\r\n                style={[this.state.text.length != 0? styles.textboxSelect : styles.textbox]}\r\n                numberOfLines={5}\r\n                placeholder=\"Add message\"\r\n                placeholderTextColor= 'white'\r\n                multiline = {true}\r\n                onChangeText = {this.setDescription}\r\n            />\r\n            <View style={{height: 20}}></View>\r\n          </View>\r\n        \r\n      );\r\n    }\r\n  }\r\n\r\nconst styles = StyleSheet.create({\r\n        textbox: {      \r\n          textAlignVertical: 'top',\r\n          fontSize: 21,\r\n          textAlign: 'left',\r\n          borderWidth: 3,\r\n          paddingVertical: 10,\r\n          paddingHorizontal: 15,\r\n          borderColor: 'white',\r\n          color: 'white',\r\n          borderRadius: 10,\r\n          borderStyle: 'dashed',\r\n          },\r\n        textboxSelect: { \r\n            textAlignVertical: 'top',\r\n            fontSize: 21,\r\n            textAlign: 'left',\r\n            borderWidth: 3,\r\n            paddingVertical: 10,\r\n            paddingHorizontal: 15,\r\n            borderColor: '#15cb61',\r\n            color: '#15cb61',\r\n            borderRadius: 10,     \r\n            borderStyle: 'dashed',\r\n            },\r\n        text:{\r\n          fontSize: 21,\r\n          paddingVertical: '3',\r\n          paddingHorizontal: '1',\r\n          borderWidth: 2,\r\n          borderRadius: 10,\r\n          }\r\n    });","import React, { useState, useMemo, Component } from 'react'\r\nimport { Modal, StyleSheet, Text, View, Pressable, TextInput, Dimensions, Button } from 'react-native';\r\nimport  {Email}  from './email';\r\nimport  {Subject}  from './subject';\r\nimport { Description } from './description';\r\n\r\nexport class Contact extends Component {\r\n\r\n    //Function to keep track of window width/height\r\n    componentDidMount() {\r\n        Dimensions.addEventListener(\"change\", (handler) => \r\n        {this.setState({wHeight: handler.window.height}); \r\n        this.setState({wWidth: handler.window.width});})\r\n    };\r\n\r\n    //Modal\r\n    setModalVisible = (visible) => {\r\n        this.setState({ isVisible: visible });\r\n    };\r\n\r\n    //States\r\n    state = {\r\n        isVisible: false,\r\n        subjectText: '',\r\n        descriptionText: '',\r\n        wHeight: Dimensions.get('window').height,\r\n        wWidth: Dimensions.get('window').width,\r\n\r\n    };\r\n\r\n    //Setters\r\n\r\n    setEmail = (email) => {\r\n        this.setState({ emailText: email })\r\n        console.log(email);\r\n    };\r\n    setSubject = (subject) => {\r\n        this.setState({ subjectText: subject });\r\n        console.log(subject);\r\n    };\r\n\r\n    setDescription = (description) => {\r\n        this.setState({ descriptionText: description });\r\n        console.log(description);\r\n    };\r\n\r\n    sentRequestTest = async () => {\r\n        \r\n        const response = await fetch('https://api.sourcehex.com/api', {\r\n        method: 'POST',\r\n        body: JSON.stringify({\r\n        appID: 'contactForm',\r\n        email: this.state.emailText,\r\n        subject: this.state.subjectText,\r\n        description: this.state.descriptionText,\r\n        \r\n        })\r\n      })        \r\n\r\n      const json = await response.json();\r\n      console.log(json.error);\r\n      if (json.error == 'success'){\r\n        console.log('succ');\r\n        //print success\r\n\r\n      }\r\n      else{\r\n        console.log('error');\r\n      }\r\n\r\n\r\n    };\r\n    \r\n    render () {  \r\n        const { isVisible } = this.state;\r\n        const { emailText } = this.state;\r\n        const { subjectText } = this.state;\r\n        const { descriptionText } = this.state;\r\n    \r\n        return (\r\n            <>\r\n            <View style={styles.btnView}>\r\n                <Pressable \r\n                    onPress={() => this.setModalVisible(true)}\r\n                    style={({ pressed }) => [\r\n                    {\r\n                        backgroundColor: pressed\r\n                        ? '#109447'\r\n                        : 'black'\r\n                    },\r\n                    styles.contactbtn,                \r\n                    ]}>\r\n                        <Text style={{color: '#15cb61', fontSize: 30, fontWeight:'bold'}}>\r\n                        ✉︎ Contact\r\n                        </Text>                    \r\n                </Pressable>               \r\n            </View>\r\n            \r\n            <Modal\r\n                animationType={'slide'}\r\n                onRequestClose={() => this.setModalVisible(false)}\r\n                transparent\r\n                visible={isVisible}\r\n            >\r\n\r\n            \r\n            <View style={styles.modalcontainer}>\r\n\r\n                <Text style={{flex: 1, color: '#15cb61', fontSize: 17, fontWeight: 'bold'}}>\r\n                    Hello! Let us know here if you have any issues using Zoom Sniper. {\"\\n\"}\r\n                    Feel free to leave suggestions, give feedback, or to say hi! {\"\\n\"}\r\n                    We will reply ASAP :) {\"\\n\"}                  \r\n                    {\"\\n\"}\r\n                </Text>\r\n                <View style={{flexDirection: \"row\", flex: 1, alignContent:\"space-around\"}}>\r\n                    <View style={styles.heading}>\r\n                        <Email saveEmail={this.setEmail}/>\r\n                    </View>\r\n                    <View style={{flex:1}}/>\r\n                    <View style={styles.heading}>\r\n                        <Subject saveSubject={this.setSubject}/>\r\n                    </View>\r\n                </View>\r\n                \r\n                <View style={{flex: 1}}></View>\r\n                        \r\n                <View style={styles.description}>\r\n                    <Description style={{flex: 1}} saveDescription={this.setDescription}/> \r\n                </View>                           \r\n\r\n                <View style={{flex: 2}}></View>\r\n                <View style={{flex: 1, flexDirection: \"row\", justifyContent: 'flex-end'}}>\r\n                    <Pressable \r\n                        onPress={() => this.setModalVisible(false)}\r\n                        style={({ pressed }) => [\r\n                            {\r\n                                backgroundColor: pressed\r\n                                ? '#109447'\r\n                                : '#15cb61'\r\n                            }, \r\n                            styles.donebtn,                \r\n                        ]}>\r\n                        <Text style={styles.donetxt}>\r\n                            CANCEL\r\n                        </Text>\r\n                    </Pressable>\r\n                        \r\n                    <View style={{width: 15}}></View>\r\n\r\n                    <Pressable \r\n                        onPress={() => {this.sentRequestTest(), this.setModalVisible(false)} }\r\n                        style={({ pressed }) => [\r\n                            {\r\n                                backgroundColor: pressed\r\n                                ? '#109447'\r\n                                : '#15cb61'\r\n                            }, \r\n                            styles.donebtn,                \r\n                        ]}>\r\n                        <Text style={styles.donetxt}>\r\n                            SUBMIT\r\n                        </Text>\r\n                    </Pressable>\r\n\r\n                </View>\r\n\r\n            </View>\r\n            </Modal>\r\n            </>\r\n\r\n        );\r\n    }\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    btnView:{\r\n        flexDirection: 'column',\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n    },\r\n    contactbtn:{\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        paddingVertical: 12,\r\n        paddingHorizontal: 30,\r\n        borderRadius: 12,\r\n    },\r\n    modalcontainer: {\r\n        alignSelf: 'center',     \r\n        backgroundColor: '#282828',\r\n        borderColor: '#2d2d2d',\r\n        borderRadius: 10,\r\n        borderWidth: 20,\r\n        borderStyle: 'dashed',\r\n        height: 'auto',\r\n        width: 'auto',\r\n        maxWidth: 600,\r\n        marginVertical: '5%',\r\n        marginHorizontal: '25%',\r\n        padding: 30,       \r\n    },\r\n    heading:{\r\n        flex: 8\r\n    },\r\n    description:{\r\n        flex: 2,\r\n    },\r\n    donebtn: {     \r\n        justifyContent: 'center',\r\n        paddingHorizontal: 15,\r\n        borderRadius: 5,\r\n    },\r\n    donetxt:{\r\n        color: 'black', \r\n        fontSize: 15, \r\n        fontWeight:'bold',\r\n    },\r\n    \r\n});","import React, {Component} from 'react'\r\nimport {StyleSheet, ImageBackground, View, Text, SafeAreaView} from 'react-native';\r\nimport {Video} from './elements/video';\r\nimport {Shot} from './elements/image';\r\nimport  {Download}  from './elements/download';\r\nimport  {MainText}  from './elements/text';\r\nimport  {Link}  from './elements/link';\r\nimport {Contact} from './elements/contact';\r\n\r\n\r\nexport class Main extends Component{\r\n\r\n    render() {\r\n        return(\r\n            <>    \r\n            <ImageBackground source={require('./assets/ZS1.png')} resizeMode=\"cover\" style={styles.background1}>\r\n                <SafeAreaView style={{flex:1}}>\r\n                    <View style={styles.bg1format}>\r\n                        <View style={styles.bg1main}>\r\n                            <View style={styles.videoview}>                                                   \r\n                                <Video/> \r\n                            </View>\r\n                            <View style={styles.textview}>\r\n                                <View style={{width:70}}/>                          \r\n                                <View style={styles.textalign}>                                                                                                                                   \r\n                                    <MainText/>                                                                    \r\n                                </View>\r\n                            </View>                                                                                                    \r\n                        </View>\r\n                        <Text style={styles.arrow}>\r\n                        ⇣\r\n                        </Text>                                                                            \r\n                    </View>                        \r\n                    <View style={{flex:1}}/>\r\n                </SafeAreaView>                    \r\n            </ImageBackground> \r\n \r\n\r\n            \r\n\r\n            <ImageBackground source={require('./assets/ZS2.png')} resizeMode=\"contain\" style={styles.background2}>\r\n                <View style={{flex:6}}/>\r\n                <View style={{flex:2}}>\r\n                    <Text style={styles.arrow}>\r\n                            ⇣\r\n                    </Text>\r\n                    <Text style={styles.textstyle}>\r\n                        Your links will open at their designated times every week!\r\n                    </Text>                                                  \r\n                </View>     \r\n            </ImageBackground>\r\n\r\n            \r\n                <View style={styles.btnview}>\r\n                    <Download/>\r\n                    <View style={{width: 30}}></View>\r\n                    <Contact/>\r\n                    <View style={{width: 30}}></View>\r\n                    <Link/>\r\n                </View>\r\n                \r\n                 \r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    background1: {\r\n        //TODO: make height proportionate to window height\r\n        height: 800,\r\n        justifyContent: \"center\",\r\n    },\r\n    background2: {\r\n        height: 750, \r\n        justifyContent: \"center\",\r\n    },\r\n    background3: {\r\n        height: 200,\r\n    },\r\n    //background 1 styles\r\n    bg1format: {\r\n        flex:5, \r\n        //flexDirection: 'column', \r\n        margin: 40,\r\n    },\r\n    bg1main: {\r\n        flex: 10,\r\n        flexDirection: \"row\",\r\n    },\r\n    videoview: {//temp photo view\r\n        flex: 1, \r\n        alignContent: 'center', \r\n        paddingTop: 50,\r\n    },\r\n    textview: {\r\n        flex: .9, \r\n        flexDirection: 'row',\r\n        marginLeft:'8%'\r\n    },\r\n    textalign: {\r\n        flex: 1, \r\n        alignItems: 'center', \r\n        justifyContent: 'center',\r\n        paddingVertical: 50,\r\n        \r\n    },\r\n    arrow: {\r\n        alignSelf: 'center',\r\n        fontSize: 90, \r\n        color: 'white'\r\n    },\r\n    //background 2 styles\r\n    bg2: {\r\n        flex: 1,       \r\n        justifyContent: \"space-between\",\r\n        padding: 20,\r\n        margin: 10,\r\n    },\r\n    textstyle: {\r\n        fontSize: 28, \r\n        fontWeight: \"bold\", \r\n        alignSelf: 'center',\r\n    },\r\n    //background 3 styles\r\n    btnview: {\r\n        flex:1, \r\n        flexDirection: 'row', \r\n        justifyContent: 'center', \r\n        alignItems: 'flex-start', \r\n        marginVertical: 20,\r\n    }\r\n  });","import {StyleSheet, SafeAreaView, View, ScrollView, Text} from 'react-native';\nimport  {Main}  from './main';\n\nexport default function App() {\n  return (\n    <SafeAreaView style={styles.container}>  \n      <ScrollView>\n        <Main/>       \n      </ScrollView>   \n    </SafeAreaView>      \n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#15cb61',\n  },\n});\n","module.exports = __webpack_public_path__ + \"static/media/tempZS.8dfd054b.JPG\";","module.exports = __webpack_public_path__ + \"static/media/ZSIcon.5007d73d.png\";","module.exports = __webpack_public_path__ + \"static/media/ZS1.45dd6aa4.png\";","module.exports = __webpack_public_path__ + \"static/media/ZS2.ae636699.png\";"],"sourceRoot":""}